app waspTesting {
  wasp: {
    version: "^0.8.1"
  },
  auth: {
    // Expects entity User to have (username:String) and (password:String) fields.
    userEntity: User,
    methods: {
      // We also support Google and GitHub, with more on the way!
      usernameAndPassword: {}
    },
    // We'll see how this is used a bit later
    onAuthFailedRedirectTo: "/login" 
  },
  dependencies: [
    ("zod", "~3"),
  ],
  title: "wasp-testing"
}

route RootRoute { path: "/", to: MainPage }
page MainPage {
  authRequired: true,
  component: import Main from "@client/MainPage"
}

route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/SignupPage"
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/LoginPage"
}

entity User {=psl
  id       Int     @id @default(autoincrement())
  username String  @unique
  password String
  tasks    Task[]
psl=}

entity Task {=psl
  id          Int     @id @default(autoincrement())
  description String
  isDone      Boolean @default(false)
  user        User    @relation(fields: [userId], references: [id])
  userId      Int
psl=}

query getTasks {
  fn: import {getTasks} from "@server/queries.js",
  entities: [Task]
}

action createTask {
  fn: import {createTask} from "@server/actions.js",
  entities: [Task]
}

action updateTask {
  fn: import {updateTask} from "@server/actions.js",
  entities: [Task]
}